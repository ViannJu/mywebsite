{"version":3,"sources":["code/grammar.js","logo.svg","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["grammar","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","parser","trace","yy","symbols_","terminals_","2","5","7","8","10","11","12","13","14","15","16","17","18","19","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","console","error","first_line","first_column","log","Number","table","3","4","6","1","9","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","popStack","n","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","lex","token","yyval","error_rule_depth","locateNearestErrorRecoveryRule","stack_probe","depth","toString","errStr","showPosition","join","text","match","line","loc","Array","last_line","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","exports","main","process","exit","source","require","readFileSync","normalize","module","argv","Navigation","className","src","logo","alt","type","onClick","document","getElementById","value","respuesta","innerHTML","placeholder","id","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4b43816.chunk.js","sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar grammar = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,10],$V3=[1,11],$V4=[1,12],$V5=[1,13],$V6=[1,16],$V7=[1,15],$V8=[1,17],$V9=[1,18],$Va=[10,12,13,14,15,19],$Vb=[10,12,13,19];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"ini\":3,\"instrucciones\":4,\"EOF\":5,\"instruccion\":6,\"REVALUAR\":7,\"CORIZQ\":8,\"expresion\":9,\"CORDER\":10,\"PTCOMA\":11,\"MENOS\":12,\"MAS\":13,\"POR\":14,\"DIVIDIDO\":15,\"ENTERO\":16,\"DECIMAL\":17,\"PARIZQ\":18,\"PARDER\":19,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",7:\"REVALUAR\",8:\"CORIZQ\",10:\"CORDER\",11:\"PTCOMA\",12:\"MENOS\",13:\"MAS\",14:\"POR\",15:\"DIVIDIDO\",16:\"ENTERO\",17:\"DECIMAL\",18:\"PARIZQ\",19:\"PARDER\"},\nproductions_: [0,[3,2],[4,2],[4,1],[4,1],[6,5],[9,2],[9,3],[9,3],[9,3],[9,3],[9,1],[9,1],[9,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n return $$[$0-1]; \nbreak;\ncase 2: case 3:\n this.$ = $$[$0]; \nbreak;\ncase 4:\n console.error('Este es un error sintáctico: ' + yytext + ', en la linea: ' + this._$.first_line + ', en la columna: ' + this._$.first_column); \nbreak;\ncase 5:\n\r\n\t\tconsole.log('El valor de la expresión es: ' + $$[$0-2]);\r\n\t\tthis.$ = $$[$0-2];\r\n\t\nbreak;\ncase 6:\n this.$ = $$[$0] *-1; \nbreak;\ncase 7:\n this.$ = $$[$0-2] + $$[$0]; \nbreak;\ncase 8:\n this.$ = $$[$0-2] - $$[$0]; \nbreak;\ncase 9:\n this.$ = $$[$0-2] * $$[$0]; \nbreak;\ncase 10:\n this.$ = $$[$0-2] / $$[$0]; \nbreak;\ncase 11: case 12:\n this.$ = Number($$[$0]); \nbreak;\ncase 13:\n this.$ = $$[$0-1]; \nbreak;\n}\n},\ntable: [{2:$V0,3:1,4:2,6:3,7:$V1},{1:[3]},{5:[1,6]},{2:$V0,4:7,5:[2,3],6:3,7:$V1},{5:[2,4]},{8:[1,8]},{1:[2,1]},{5:[2,2]},{9:9,12:$V2,16:$V3,17:$V4,18:$V5},{10:[1,14],12:$V6,13:$V7,14:$V8,15:$V9},{9:19,12:$V2,16:$V3,17:$V4,18:$V5},o($Va,[2,11]),o($Va,[2,12]),{9:20,12:$V2,16:$V3,17:$V4,18:$V5},{11:[1,21]},{9:22,12:$V2,16:$V3,17:$V4,18:$V5},{9:23,12:$V2,16:$V3,17:$V4,18:$V5},{9:24,12:$V2,16:$V3,17:$V4,18:$V5},{9:25,12:$V2,16:$V3,17:$V4,18:$V5},o($Va,[2,6]),{12:$V6,13:$V7,14:$V8,15:$V9,19:[1,26]},o([2,5,7],[2,5]),o($Vb,[2,7],{14:$V8,15:$V9}),o($Vb,[2,8],{14:$V8,15:$V9}),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,13])],\ndefaultActions: {4:[2,4],6:[2,1],7:[2,2]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse (input) {\n    var self = this,\n        stack = [0],\n        tstack = [], // token stack\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    var args = lstack.slice.call(arguments, 1);\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    // copy state\n    for (var k in this.yy) {\n      if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n        sharedState.yy[k] = this.yy[k];\n      }\n    }\n\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n\n    var ranges = lexer.options && lexer.options.ranges;\n\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n\n    function popStack (n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n_token_stack:\n    var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length - 1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n_handle_error:\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n            var error_rule_depth;\n            var errStr = '';\n\n            // Return the rule stack depth where the nearest error rule can be found.\n            // Return FALSE when no error recovery rule was found.\n            function locateNearestErrorRecoveryRule(state) {\n                var stack_probe = stack.length - 1;\n                var depth = 0;\n\n                // try to recover from error\n                for(;;) {\n                    // check for error recovery rule in this state\n                    if ((TERROR.toString()) in table[state]) {\n                        return depth;\n                    }\n                    if (state === 0 || stack_probe < 2) {\n                        return false; // No suitable error recovery rule available.\n                    }\n                    stack_probe -= 2; // popStack(1): [symbol, action]\n                    state = stack[stack_probe];\n                    ++depth;\n                }\n            }\n\n            if (!recovering) {\n                // first see if there's any chance at hitting an error recovery rule:\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n\n                // Report error\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push(\"'\"+this.terminals_[p]+\"'\");\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + (this.terminals_[symbol] || symbol)+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == EOF ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected,\n                    recoverable: (error_rule_depth !== false)\n                });\n            } else if (preErrorSymbol !== EOF) {\n                error_rule_depth = locateNearestErrorRecoveryRule(state);\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol === EOF || preErrorSymbol === EOF) {\n                    throw new Error(errStr || 'Parsing halted while starting to recover from another error.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            if (error_rule_depth === false) {\n                throw new Error(errStr || 'Parsing halted. No suitable error recovery rule available.');\n            }\n            popStack(error_rule_depth);\n\n            preErrorSymbol = (symbol == TERROR ? null : symbol); // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(lexer.yytext);\n                lstack.push(lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = lexer.yyleng;\n                    yytext = lexer.yytext;\n                    yylineno = lexer.yylineno;\n                    yyloc = lexer.yylloc;\n                    if (recovering > 0) {\n                        recovering--;\n                    }\n                } else {\n                    // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2:\n                // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                if (ranges) {\n                  yyval._$.range = [lstack[lstack.length-(len||1)].range[0], lstack[lstack.length-1].range[1]];\n                }\n                r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3:\n                // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 7;\nbreak;\ncase 1:return 11;\nbreak;\ncase 2:return 18;\nbreak;\ncase 3:return 19;\nbreak;\ncase 4:return 8;\nbreak;\ncase 5:return 10;\nbreak;\ncase 6:return 13;\nbreak;\ncase 7:return 12;\nbreak;\ncase 8:return 14;\nbreak;\ncase 9:return 15;\nbreak;\ncase 10:\nbreak;\ncase 11:\nbreak;\ncase 12:return 17;\nbreak;\ncase 13:return 16;\nbreak;\ncase 14:return 5;\nbreak;\ncase 15: console.error('Este es un error léxico: ' + yy_.yytext + ', en la linea: ' + yy_.yylloc.first_line + ', en la columna: ' + yy_.yylloc.first_column); \nbreak;\n}\n},\nrules: [/^(?:Evaluar\\b)/i,/^(?:;)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:\\[)/i,/^(?:\\])/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:[ \\r\\t]+)/i,/^(?:\\n)/i,/^(?:[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:[0-9]+\\b)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = grammar;\nexports.Parser = grammar.Parser;\nexports.parse = function () { return grammar.parse.apply(grammar, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\r\n\r\nfunction Navigation(){\r\n\r\n    /*function getText ()  {\r\n        console.log(\"getText Button clicked\");\r\n        let text = document.getElementById(\"InputTextarea\").value;\r\n        console.log(\"El texto es: \\n\"+text);\r\n    }*/\r\n\r\n    function setText(){\r\n        console.log(\"setText Button clicked\");\r\n        let text = document.getElementById(\"InputTextarea\").value;\r\n\r\n        var parser = require('../code/grammar');\r\n        var respuesta = parser.parse(text);\r\n\r\n        document.getElementById(\"OutputTextarea\").innerHTML = respuesta;\r\n    }\r\n\r\n    return(\r\n        //tag principal\r\n        <header className=\"App-header\">\r\n\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                Organización de Lenguajes y Compiladores 2\r\n            <p></p>\r\n            <p></p>\r\n            <p></p>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"MiniColumn\">\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={setText}>Compilar</button>\r\n                </div>\r\n                <div className=\"MiniColumn\">\r\n                <button type=\"button\" className=\"btn btn-primary\">Reportes</button>\r\n                </div>\r\n                <div className=\"MiniColumn\">\r\n                <button type=\"button\" className=\"btn btn-primary\">Limpiar</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"column\">\r\n                    <textarea className=\"Text\" placeholder=\"Bienvenido\" id=\"InputTextarea\" ></textarea>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <textarea className=\"Text\" placeholder=\"Bienvenido\" id=\"OutputTextarea\" ></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <p></p>\r\n            <p></p>\r\n            <p></p>\r\n\r\n            <footer className=\"bg-dark text-center text-lg-start\">\r\n            <div className=\"text-center p-3 text-light \">\r\n                <font size=\"3\">\r\n                <p>\r\n                Viany Paola Juárez Hernández <br/>\r\n                201700659<br/>\r\n                Organización de Lenguajes y Compiladores 2<br/>\r\n                Escuela de Vacaciones Junio 2021<br/>                \r\n                </p>\r\n                </font>\r\n                \r\n            </div>\r\n            </footer>\r\n\r\n            \r\n            \r\n            \r\n        </header>\r\n        \r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Navigation;","import './App.css';\n\n//Componentes\n//import InConsole from './components/InConsole'\nimport Navigation from './components/Navigation';\n//import Navigation from './components/Navigation'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Navigation />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}